# Generated by Django 3.1.4 on 2021-02-05 13:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GiaVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(blank=True, max_length=10)),
                ('invoice_number', models.CharField(blank=True, max_length=10)),
                ('started', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoldwayVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order', models.CharField(blank=True, max_length=10)),
                ('invoice_number', models.CharField(blank=True, max_length=10)),
                ('started', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inclusion', models.CharField(choices=[('Br', 'Bruise'), ('Cv', 'Cavity'), ('Ch', 'Chip'), ('Clv', 'Cleavage'), ('Cld', 'Cloud'), ('Ftr', 'Feather'), ('GrCnt', 'Grain Center'), ('IndN', 'Indented natural'), ('IntGr', 'Internal graining'), ('K', 'knot'), ('LDH', 'Laser Drill Hole'), ('Ndl', 'Needle'), ('Pp', 'Pinpoint'), ('W', 'Twinning Wisp'), ('Abr', 'Abrasion'), ('N', 'Natural'), ('Nk', 'Nick'), ('Pit', 'Pit'), ('PL', 'Polish Line'), ('Brn', 'Burn Mask'), ('S', 'Scratch'), ('SGr', 'Surface Graining'), ('EF', 'Extra Feet')], max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parcel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_parcel_code', models.CharField(max_length=15)),
                ('total_carats', models.DecimalField(decimal_places=3, max_digits=5)),
                ('total_pieces', models.IntegerField()),
                ('reference_price_per_carat', models.PositiveIntegerField()),
                ('gradia_parcel_code', models.CharField(max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Split',
            fields=[
                ('original_parcel', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='grading.parcel')),
                ('split_date', models.DateTimeField(auto_now_add=True)),
                ('split_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('intake_date', models.DateTimeField(auto_now_add=True)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customers.entity')),
                ('intake_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signed_off_on_stone_intake', to=settings.AUTH_USER_MODEL)),
                ('release_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='signed_off_on_stone_release', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer receipt',
            },
        ),
        migrations.AddField(
            model_name='parcel',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grading.receipt'),
        ),
        migrations.CreateModel(
            name='Stone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_description', models.CharField(blank=True, max_length=120, null=True)),
                ('basic_carat', models.DecimalField(decimal_places=3, max_digits=5)),
                ('basic_color_1', models.CharField(choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1)),
                ('basic_color_2', models.CharField(choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('basic_color_3', models.CharField(choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('basic_final_color', models.CharField(choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1)),
                ('basic_clarity_1', models.CharField(choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4)),
                ('basic_clarity_2', models.CharField(choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4, null=True)),
                ('basic_clarity_3', models.CharField(choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4, null=True)),
                ('basic_final_clarity', models.CharField(choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4)),
                ('basic_fluorescence', models.CharField(choices=[('VS', 'Very Strong'), ('S', 'Strong'), ('M', 'Medium'), ('F', 'Faint'), ('N', 'None')], max_length=4)),
                ('basic_culet', models.CharField(choices=[('N', 'None'), ('VS', 'Very Small'), ('S', 'Small'), ('M', 'Medium'), ('SL', 'Slightly Large'), ('L', 'Large'), ('VL', 'Very Large'), ('XL', 'Extremely Large')], max_length=2)),
                ('basic_polish_1', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('basic_polish_2', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4, null=True)),
                ('basic_polish_3', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4, null=True)),
                ('basic_final_polish', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('diameter_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('diameter_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('height', models.DecimalField(decimal_places=2, max_digits=5)),
                ('table_size', models.DecimalField(decimal_places=1, max_digits=4)),
                ('crown_angle', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pavilion_angle', models.DecimalField(decimal_places=2, max_digits=4)),
                ('star_length', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lower_half', models.DecimalField(decimal_places=1, max_digits=4)),
                ('girdle_thick', models.DecimalField(decimal_places=2, max_digits=4)),
                ('girdle_min', models.DecimalField(decimal_places=2, max_digits=4)),
                ('girdle_max', models.DecimalField(decimal_places=2, max_digits=4)),
                ('culet_size', models.DecimalField(decimal_places=2, max_digits=4)),
                ('crown_height', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pavilion_depth', models.DecimalField(decimal_places=2, max_digits=4)),
                ('total_depth', models.DecimalField(decimal_places=2, max_digits=4)),
                ('table_size_pct', models.IntegerField()),
                ('table_size_pct_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('crown_angle_degree', models.DecimalField(decimal_places=1, max_digits=4)),
                ('crown_angle_degree_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('pavilion_angle_degree', models.DecimalField(decimal_places=1, max_digits=4)),
                ('pavilion_angle_degree_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('star_length_degree', models.IntegerField(blank=True, null=True)),
                ('star_length_degree_grade', models.CharField(blank=True, choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4, null=True)),
                ('lower_half_pct', models.IntegerField()),
                ('lower_half_pct_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('girdle_thick_pct', models.DecimalField(decimal_places=1, max_digits=4)),
                ('girdle_thick_pct_grade', models.CharField(blank=True, choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4, null=True)),
                ('girdle_min_description', models.CharField(choices=[('EXT', 'Extremely Thin'), ('VTN', 'Very Thin'), ('THIN', 'Thin'), ('MED', 'Medium'), ('STK', 'Slightly Thick'), ('THK', 'Thick'), ('VTK', 'Very Thick'), ('EXT', 'Extremely Thick'), ('F', 'Faceted'), ('SM', 'Smooth'), ('ETN TO VTN', 'Extremely thin - very thin')], max_length=10)),
                ('girdle_max_description', models.CharField(choices=[('EXT', 'Extremely Thin'), ('VTN', 'Very Thin'), ('THIN', 'Thin'), ('MED', 'Medium'), ('STK', 'Slightly Thick'), ('THK', 'Thick'), ('VTK', 'Very Thick'), ('EXT', 'Extremely Thick'), ('F', 'Faceted'), ('SM', 'Smooth'), ('ETN TO VTN', 'Extremely thin - very thin')], max_length=10)),
                ('girdle_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('culet_size_description', models.CharField(choices=[('N/VS', 'None / Very Small'), ('N/S', 'None / Small'), ('M/N', 'Medium / None'), ('N/SL', 'None / Slightly Large'), ('L/N', 'Large / None'), ('N/VL', 'None / Very Large'), ('N/XL', 'None / Extremely Large'), ('S/VS', 'Small / Very Small'), ('M/VS', 'Medium / Very Small'), ('SL/VS', 'Slightly Large / Very Small'), ('L/VS', 'Large / Very Small'), ('VL/VS', 'Very Large / Very Small'), ('VS/XL', 'Very Small / Extremely Large'), ('M/S', 'Medium / Small'), ('S/SL', 'Small / Slightly Large'), ('L/S', 'Large / Small'), ('S/VL', 'Small / Very Large'), ('S/XL', 'Small / Extremely Large'), ('M/SL', 'Medium / Slightly Large'), ('L/M', 'Large / Medium'), ('M/VL', 'Medium / Very Large'), ('M/XL', 'Medium / Extremely Large'), ('L/SL', 'Large / Slightly Large'), ('SL/VL', 'Slightly Large / Very Large'), ('SL/XL', 'Slightly Large / Extremely Large'), ('L/VL', 'Large / Very Large'), ('L/XL', 'Large / Extremely Large'), ('VL/XL', 'Very Large / Extremely Large')], max_length=5)),
                ('crown_height_pct', models.DecimalField(decimal_places=1, max_digits=4)),
                ('crown_height_pct_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('pavilion_depth_pct', models.DecimalField(decimal_places=1, max_digits=4)),
                ('total_depth_pct', models.DecimalField(decimal_places=1, max_digits=4)),
                ('total_depth_pct_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('star_length_pct', models.DecimalField(decimal_places=1, max_digits=4)),
                ('star_length_pct_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('parameter_cut_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('est_table_cut_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('gradia_cut', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('final_gradia_cut', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('final_sarine_cut', models.CharField(blank=True, choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4, null=True)),
                ('sarine_cut', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('sarine_symmetry', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('roundness', models.DecimalField(decimal_places=1, max_digits=4)),
                ('roundness_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('table_size_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('table_size_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('crown_angle_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('crown_angle_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('pavilion_angle_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('pavilion_angle_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('star_length_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('star_length_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('lower_half_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lower_half_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('girdle_thick_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('girdle_thick_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('crown_height_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('crown_height_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('pavilion_depth_dev', models.DecimalField(decimal_places=1, max_digits=4)),
                ('pavilion_depth_dev_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('misalignment', models.DecimalField(decimal_places=1, max_digits=4)),
                ('misalignment_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('table_edge_var', models.DecimalField(decimal_places=1, max_digits=4)),
                ('table_edge_var_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('table_off_center', models.DecimalField(decimal_places=1, max_digits=4)),
                ('table_off_center_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('culet_off_center', models.DecimalField(decimal_places=1, max_digits=4)),
                ('culet_off_center_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('table_off_culet', models.DecimalField(decimal_places=1, max_digits=4)),
                ('table_off_culet_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('star_angle', models.DecimalField(decimal_places=1, max_digits=4)),
                ('star_angle_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('upper_half_angle', models.DecimalField(decimal_places=1, max_digits=4)),
                ('upper_half_angle_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('lower_half_angle', models.DecimalField(decimal_places=1, max_digits=4)),
                ('lower_half_angle_grade', models.CharField(choices=[('EX', 'Excellent'), ('VG', 'Very Good'), ('GD', 'Good'), ('F', 'Fair'), ('P', 'Poor')], max_length=4)),
                ('gw_returned_date', models.DateTimeField(blank=True, null=True)),
                ('gw_carat', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('gw_repolish_carat', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('gw_fluorescence', models.CharField(blank=True, choices=[('VS', 'Very Strong'), ('S', 'Strong'), ('M', 'Medium'), ('F', 'Faint'), ('N', 'None')], max_length=4, null=True)),
                ('gw_color', models.CharField(blank=True, choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('gw_clarity', models.CharField(blank=True, choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4, null=True)),
                ('gw_culet', models.CharField(blank=True, choices=[('N', 'None'), ('VS', 'Very Small'), ('S', 'Small'), ('M', 'Medium'), ('SL', 'Slightly Large'), ('L', 'Large'), ('VL', 'Very Large'), ('XL', 'Extremely Large')], max_length=2, null=True)),
                ('date_to_gw', models.DateTimeField(blank=True, null=True)),
                ('post_gw_final_carat', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('post_gw_final_color', models.CharField(blank=True, choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('post_gw_final_clarity', models.CharField(choices=[('IF', 'Internally Flawless'), ('VVS1', 'Very Very Slightly Included Degree 1'), ('VVS2', 'Very Very Slightly Included Degree 2'), ('VS1', 'Very Slightly Included Degree 1'), ('VS2', 'Very Slightly Included Degree 2'), ('SI1', 'Slightly Included Degree 1'), ('SI2', 'Slightly Included Degree 2'), ('I1', 'Included')], max_length=4)),
                ('post_gw_fluorescence', models.CharField(blank=True, choices=[('VS', 'Very Strong'), ('S', 'Strong'), ('M', 'Medium'), ('F', 'Faint'), ('N', 'None')], max_length=4, null=True)),
                ('post_gw_culet', models.CharField(choices=[('N', 'None'), ('VS', 'Very Small'), ('S', 'Small'), ('M', 'Medium'), ('SL', 'Slightly Large'), ('L', 'Large'), ('VL', 'Very Large'), ('XL', 'Extremely Large')], max_length=2)),
                ('post_gw_rejection', models.TextField(blank=True, null=True)),
                ('gia_returned_date', models.DateTimeField(blank=True, null=True)),
                ('gia_color', models.CharField(blank=True, choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('post_gia_final_color', models.CharField(blank=True, choices=[('D', 'Colorless D'), ('E', 'Colorless E'), ('F', 'Colorless F'), ('G', 'Nearly Colorless G'), ('H', 'Nearly Colorless H'), ('I', 'Nearly Colorless I'), ('J', 'Nearly Colorless J')], max_length=1, null=True)),
                ('gia_material_testing', models.CharField(blank=True, max_length=20, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('internal_id', models.IntegerField(unique=True)),
                ('external_id', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('basic_inclusions', models.ManyToManyField(related_name='basic_inclusions', to='grading.Inclusion')),
                ('data_entry_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entered_data_for_stone', to=settings.AUTH_USER_MODEL)),
                ('gia_verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='grading.giaverification')),
                ('grader_1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grader_1_for_stone', to=settings.AUTH_USER_MODEL)),
                ('grader_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grader_2_for_stone', to=settings.AUTH_USER_MODEL)),
                ('grader_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grader_3_for_stone', to=settings.AUTH_USER_MODEL)),
                ('gw_verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='grading.goldwayverification')),
                ('post_gw_inclusions', models.ManyToManyField(related_name='post_gw_inclusions', to='grading.Inclusion')),
                ('split_from', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grading.split')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='parcel',
            name='split_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='grading.split'),
        ),
    ]
