# Generated by Django 3.0.6 on 2020-12-02 09:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [("customers", "0001_initial"), migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name="GiaVerification",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("receipt_number", models.CharField(blank=True, max_length=10)),
                ("invoice_number", models.CharField(blank=True, max_length=10)),
                ("started", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="GoldwayVerification",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("purchase_order", models.CharField(blank=True, max_length=10)),
                ("invoice_number", models.CharField(blank=True, max_length=10)),
                ("started", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Inclusion",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "inclusion",
                    models.CharField(
                        choices=[
                            ("BR", "Bruise"),
                            ("CV", "Cavity"),
                            ("CH", "Chip"),
                            ("CL", "Cloud"),
                            ("F", "Feather"),
                            ("IC", "Included crystal"),
                            ("IN", "Indented natural"),
                            ("IG", "Internal graining"),
                            ("KN", "knot"),
                            ("ND", "Needle"),
                            ("PP", "Pinpoint"),
                            ("AB", "Abrasion"),
                            ("SC", "Scratch"),
                            ("NK", "Nick"),
                            ("PL", "Polish Line"),
                            ("PT", "Pit"),
                            ("N", "Natural"),
                            ("EF", "Extra Feet"),
                            ("SG", "Surface Graining"),
                        ],
                        max_length=3,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parcel",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("customer_parcel_code", models.CharField(max_length=15)),
                ("total_carats", models.DecimalField(decimal_places=3, max_digits=5)),
                ("total_pieces", models.IntegerField()),
                ("reference_price_per_carat", models.PositiveIntegerField()),
                ("gradia_parcel_code", models.CharField(max_length=15)),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Split",
            fields=[
                (
                    "original_parcel",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        primary_key=True,
                        serialize=False,
                        to="grading.Parcel",
                    ),
                ),
                ("split_date", models.DateTimeField(auto_now_add=True)),
                (
                    "split_by",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Receipt",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=15)),
                ("intake_date", models.DateTimeField(auto_now_add=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("entity", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="customers.Entity")),
                (
                    "intake_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="signed_off_on_stone_intake",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "release_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="signed_off_on_stone_release",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "customer receipt"},
        ),
        migrations.AddField(
            model_name="parcel",
            name="receipt",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="grading.Receipt"),
        ),
        migrations.CreateModel(
            name="Stone",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("internal_id", models.IntegerField(unique=True)),
                ("external_id", models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("diamond_description", models.CharField(blank=True, max_length=120, null=True)),
                ("basic_carat", models.DecimalField(decimal_places=3, max_digits=5)),
                (
                    "basic_culet",
                    models.CharField(
                        choices=[
                            ("N", "None"),
                            ("VS", "Very Small"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("SL", "Slightly Large"),
                            ("L", "Large"),
                            ("VL", "Very Large"),
                            ("XL", "Extremely Large"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "basic_fluorescence",
                    models.CharField(
                        choices=[
                            ("VS", "Very Strong"),
                            ("S", "Strong"),
                            ("M", "Medium"),
                            ("F", "Faint"),
                            ("N", "None"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "basic_color_1",
                    models.CharField(
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "basic_color_2",
                    models.CharField(
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "basic_color_3",
                    models.CharField(
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "basic_final_color",
                    models.CharField(
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "basic_clarity_1",
                    models.CharField(
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "basic_clarity_2",
                    models.CharField(
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "basic_clarity_3",
                    models.CharField(
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "basic_final_clarity",
                    models.CharField(
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "basic_polish_1",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "basic_polish_2",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "basic_polish_3",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "basic_final_polish",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("diameter_min", models.DecimalField(decimal_places=3, max_digits=5)),
                ("diameter_max", models.DecimalField(decimal_places=3, max_digits=5)),
                ("height", models.DecimalField(decimal_places=3, max_digits=5)),
                (
                    "girdle_min",
                    models.CharField(
                        choices=[
                            ("EXT", "Extremely Thin"),
                            ("VTN", "Very Thin"),
                            ("THIN", "Thin"),
                            ("MED", "Medium"),
                            ("STK", "Slightly Thick"),
                            ("THK", "Thick"),
                            ("VTK", "Very Thick"),
                            ("EXT", "Extremely Thick"),
                            ("F", "Faceted"),
                            ("SM", "Smooth"),
                            ("ETN TO VTN", "Extremely thin - very thin"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "girdle_max",
                    models.CharField(
                        choices=[
                            ("EXT", "Extremely Thin"),
                            ("VTN", "Very Thin"),
                            ("THIN", "Thin"),
                            ("MED", "Medium"),
                            ("STK", "Slightly Thick"),
                            ("THK", "Thick"),
                            ("VTK", "Very Thick"),
                            ("EXT", "Extremely Thick"),
                            ("F", "Faceted"),
                            ("SM", "Smooth"),
                            ("ETN TO VTN", "Extremely thin - very thin"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "girdle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "culet_size",
                    models.CharField(
                        choices=[
                            ("N", "None"),
                            ("VS", "Very Small"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("SL", "Slightly Large"),
                            ("L", "Large"),
                            ("VL", "Very Large"),
                            ("XL", "Extremely Large"),
                        ],
                        max_length=4,
                    ),
                ),
                ("total_depth", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "total_depth_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "sheryl_cut",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "sarine_cut",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "cut_grade_est_table",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "sheryl_symmetry",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "sarine_symmetry",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "symmetry_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("roundness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "roundness_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("table_size", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "table_size_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("crown_angle", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "crown_angle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("pavilion_angle", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "pavilion_angle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("star_length", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "star_length_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("lower_half", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "lower_half_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("girdle_thick", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "girdle_thick_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("crown_height", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "crown_height_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("pavilion_depth", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "pavilion_depth_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("misalignment", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "misalignment_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("table_edge_var", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "table_edge_var_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("table_off_center", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "table_off_center_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("culet_off_center", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "culet_off_center_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("table_off_culet", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "table_off_culet_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("star_angle", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "star_angle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("upper_half_angle", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "upper_half_angle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                ("lower_half_angle", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "lower_half_angle_grade",
                    models.CharField(
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "GW_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "post_GW_final_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "GW_clarity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "post_GW_final_clarity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "GW_fluo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VS", "Very Strong"),
                            ("S", "Strong"),
                            ("M", "Medium"),
                            ("F", "Faint"),
                            ("N", "None"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "post_GW_fluo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VS", "Very Strong"),
                            ("S", "Strong"),
                            ("M", "Medium"),
                            ("F", "Faint"),
                            ("N", "None"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "fluoresence",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VS", "Very Strong"),
                            ("S", "Strong"),
                            ("M", "Medium"),
                            ("F", "Faint"),
                            ("N", "None"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "GW_culet",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("N", "None"),
                            ("VS", "Very Small"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("SL", "Slightly Large"),
                            ("L", "Large"),
                            ("VL", "Very Large"),
                            ("XL", "Extremely Large"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "post_GW_culet",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("N", "None"),
                            ("VS", "Very Small"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("SL", "Slightly Large"),
                            ("L", "Large"),
                            ("VL", "Very Large"),
                            ("XL", "Extremely Large"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                ("GW_carat", models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ("post_GW_final_carat", models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ("GW_repolish_carat", models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ("date_to_GW", models.DateTimeField(blank=True, null=True)),
                ("GW_returned_date", models.DateTimeField(blank=True, null=True)),
                ("goldway_AI_code", models.CharField(blank=True, max_length=15, null=True)),
                ("post_GW_rejection", models.TextField(blank=True, null=True)),
                ("date_to_GIA", models.DateTimeField(blank=True, null=True)),
                ("GIA_returned_date", models.DateTimeField(blank=True, null=True)),
                ("GIA_batch_code", models.IntegerField(blank=True, null=True)),
                ("post_GIA_rejection", models.TextField(blank=True, null=True)),
                ("blockchain_ID_code", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("D", "Colorless D"),
                            ("E", "Colorless E"),
                            ("F", "Colorless F"),
                            ("G", "Nearly Colorless G"),
                            ("H", "Nearly Colorless H"),
                            ("I", "Nearly Colorless I"),
                            ("J", "Nearly Colorless J"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "clarity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("IF", "Internally Flawless"),
                            ("VVS1", "Very Very Slightly Included Degree 1"),
                            ("VVS2", "Very Very Slightly Included Degree 2"),
                            ("VS1", "Very Slightly Included Degree 1"),
                            ("VS2", "Very Slightly Included Degree 2"),
                            ("SI1", "Slightly Included Degree 1"),
                            ("SI2", "Slightly Included Degree 2"),
                            ("I1", "Included"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "culet",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("N", "None"),
                            ("VS", "Very Small"),
                            ("S", "Small"),
                            ("M", "Medium"),
                            ("SL", "Slightly Large"),
                            ("L", "Large"),
                            ("VL", "Very Large"),
                            ("XL", "Extremely Large"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "cut_grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EX", "Excellent"),
                            ("VG", "Very Good"),
                            ("GOOD", "Good"),
                            ("F", "Fair"),
                            ("P", "Poor"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                ("carat_weight", models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                (
                    "data_entry_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="entered_data_for_stone",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "gia_verification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="grading.GiaVerification",
                    ),
                ),
                (
                    "goldway_verification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="grading.GoldwayVerification",
                    ),
                ),
                (
                    "grader_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="grader_1_for_stone",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "grader_2",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="grader_2_for_stone",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "grader_3",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="grader_3_for_stone",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("inclusions", models.ManyToManyField(to="grading.Inclusion")),
                ("split_from", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="grading.Split")),
            ],
        ),
        migrations.AddField(
            model_name="parcel",
            name="split_from",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="grading.Split"
            ),
        ),
    ]
